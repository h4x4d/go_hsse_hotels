// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "MTS HSSE Go project | Booking svc",
    "title": "hotels.booking",
    "version": "0.2.1"
  },
  "paths": {
    "/booking": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "customer",
          "hotelier"
        ],
        "summary": "Get suitable bookings",
        "operationId": "get_booking",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "hotel_id",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "room_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Booking not found"
          }
        }
      },
      "post": {
        "security": [
          {
            "api_key": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "customer"
        ],
        "summary": "Create booking",
        "operationId": "create_booking",
        "parameters": [
          {
            "name": "object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "booking_id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "405": {
            "description": "Incorrect data"
          }
        }
      }
    },
    "/booking/{booking_id}": {
      "get": {
        "security": [
          {
            "api_key": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "customer",
          "hotelier"
        ],
        "summary": "Get booking info by id",
        "operationId": "get_booking_by_id",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of booking to return",
            "name": "booking_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Booking not found"
          }
        }
      },
      "put": {
        "security": [
          {
            "api_key": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "customer",
          "hotelier"
        ],
        "summary": "Update booking",
        "operationId": "update_booking",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of booking to change",
            "name": "booking_id",
            "in": "path",
            "required": true
          },
          {
            "name": "object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "booking_id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "No access"
          },
          "405": {
            "description": "Incorrect data"
          }
        }
      },
      "delete": {
        "security": [
          {
            "api_key": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "customer",
          "hotelier"
        ],
        "summary": "Delete booking info by id",
        "operationId": "delete_booking_by_id",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of booking to delete",
            "name": "booking_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Booking not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Booking": {
      "type": "object",
      "required": [
        "date_from",
        "date_to",
        "room_id",
        "hotel_id",
        "status"
      ],
      "properties": {
        "booking_id": {
          "type": "integer",
          "format": "int64"
        },
        "date_from": {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
          "example": "2024-12-31"
        },
        "date_to": {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
          "example": "2025-01-11"
        },
        "hotel_id": {
          "type": "integer",
          "format": "int64"
        },
        "room_id": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "status of booking",
          "type": "string",
          "enum": [
            "Unpayed",
            "Confirming",
            "Confirmed",
            "Canceled"
          ]
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "telegram": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Customer operations",
      "name": "customer"
    },
    {
      "description": "Hotelier operations",
      "name": "hotelier"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "MTS HSSE Go project | Booking svc",
    "title": "hotels.booking",
    "version": "0.2.1"
  },
  "paths": {
    "/booking": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "customer",
          "hotelier"
        ],
        "summary": "Get suitable bookings",
        "operationId": "get_booking",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "hotel_id",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "room_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Booking not found"
          }
        }
      },
      "post": {
        "security": [
          {
            "api_key": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "customer"
        ],
        "summary": "Create booking",
        "operationId": "create_booking",
        "parameters": [
          {
            "name": "object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "booking_id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "405": {
            "description": "Incorrect data"
          }
        }
      }
    },
    "/booking/{booking_id}": {
      "get": {
        "security": [
          {
            "api_key": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "customer",
          "hotelier"
        ],
        "summary": "Get booking info by id",
        "operationId": "get_booking_by_id",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of booking to return",
            "name": "booking_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Booking not found"
          }
        }
      },
      "put": {
        "security": [
          {
            "api_key": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "customer",
          "hotelier"
        ],
        "summary": "Update booking",
        "operationId": "update_booking",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of booking to change",
            "name": "booking_id",
            "in": "path",
            "required": true
          },
          {
            "name": "object",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "booking_id": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "403": {
            "description": "No access"
          },
          "405": {
            "description": "Incorrect data"
          }
        }
      },
      "delete": {
        "security": [
          {
            "api_key": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "customer",
          "hotelier"
        ],
        "summary": "Delete booking info by id",
        "operationId": "delete_booking_by_id",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "ID of booking to delete",
            "name": "booking_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "403": {
            "description": "No access"
          },
          "404": {
            "description": "Booking not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Booking": {
      "type": "object",
      "required": [
        "date_from",
        "date_to",
        "room_id",
        "hotel_id",
        "status"
      ],
      "properties": {
        "booking_id": {
          "type": "integer",
          "format": "int64"
        },
        "date_from": {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
          "example": "2024-12-31"
        },
        "date_to": {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
          "example": "2025-01-11"
        },
        "hotel_id": {
          "type": "integer",
          "format": "int64"
        },
        "room_id": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "status of booking",
          "type": "string",
          "enum": [
            "Unpayed",
            "Confirming",
            "Confirmed",
            "Canceled"
          ]
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "telegram": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Customer operations",
      "name": "customer"
    },
    {
      "description": "Hotelier operations",
      "name": "hotelier"
    }
  ]
}`))
}
