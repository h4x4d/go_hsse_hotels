---
swagger: "2.0"
info:
  description: "MTS HSSE Go project | Booking svc"
  version: "0.3.0"
  title: "hotels.booking"
tags:
  - name: "customer"
    description: "Customer operations"
  - name: "hotelier"
    description: "Hotelier operations"
  - name: "instruments"
    description: "Inner operations"
schemes:
  #  - "https"
  - "http"
paths:
  /booking/{booking_id}:
    get:
      tags:
        - "customer"
        - "hotelier"
      summary: "Get booking info by id"
      operationId: "get_booking_by_id"
      produces:
        - "application/json"
      parameters:
        - name: "booking_id"
          in: "path"
          description: "ID of booking to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Booking"
        404:
          description: "Booking not found"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "No access"
          schema:
            $ref: "#/definitions/Error"
      security:
        - api_key: [ ]

    put:
      tags:
        - "customer"
        - "hotelier"
      summary: "Update booking"
      operationId: "update_booking"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "booking_id"
          in: "path"
          description: "ID of booking to change"
          required: true
          type: "integer"
          format: "int64"
        - name: "object"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Booking"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Booking"
        403:
          description: "No access"
          schema:
            $ref: "#/definitions/Error"
        400:
          description: "Incorrect data"
          schema:
            $ref: "#/definitions/Error"
      security:
        - api_key: [ ]

  /booking:
    get:
      tags:
        - "hotelier"
      summary: "Get suitable bookings"
      operationId: "get_booking"
      produces:
        - "application/json"
      parameters:
        - name: "hotel_id"
          in: "query"
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Booking"
        403:
          description: "No access"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Booking not found"
          schema:
            $ref: "#/definitions/Error"
      security:
        - api_key: [ ]
    post:
      tags:
        - "customer"
      summary: "Create booking"
      operationId: "create_booking"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "object"
          in: "body"
          required: true
          schema:
            required:
              - hotel_id
              - date_from
              - date_to
            properties:
              hotel_id:
                type: "integer"
                format: "int64"
              date_from:
                type: "string"
              date_to:
                type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              booking_id:
                type: "integer"
                format: "int64"
        403:
          description: "No access"
          schema:
            $ref: "#/definitions/Error"
        400:
          description: "Incorrect data"
          schema:
            $ref: "#/definitions/Error"
      security:
        - api_key: [ ]
  /metrics:
    get:
      tags:
        - "instruments"
      summary: "Prometheus metrics"
      produces:
        - "application/json"
      responses:
        200:
          description: ok

securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Booking:
    type: "object"
    required:
      - "date_from"
      - "date_to"
      - "hotel_id"
    properties:
      booking_id:
        type: "integer"
        format: "int64"
      date_from:
        type: "string"
        pattern: ^\d{2}-\d{2}-\d{4}$
        example: "31-12-2024"
      date_to:
        type: "string"
        pattern: ^\d{2}-\d{2}-\d{4}$
        example: "31-12-2025"
      hotel_id:
        type: "integer"
        format: "int64"
      full_cost:
        type: "integer"
        format: "int64"
      status:
        type: "string"
        description: "status of booking"
        enum:
          - "Unpayed"
          - "Confirming"
          - "Confirmed"
          - "Canceled"
      user_id:
        type: "string"
  Error:
    type: "object"
    required:
      - "error_status_code"
    properties:
      error_message:
        type: "string"
      error_status_code:
        type: integer
  Result:
    type: "object"
    properties:
      status:
        type: "string"
      message:
        type: "string"
  Hotel:
    type: "object"
    required:
      - "name"
      - "city"
      - "address"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Radisson"
      city:
        type: "string"
        example: "Moscow"
      address:
        type: "string"
        example: "Red Square â„–1"
      hotel_class:
        type: "integer"
        description: "number of stars of hotel"
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
      cost:
        type: "integer"
        format: "int64"
      user_id:
        type: "string"