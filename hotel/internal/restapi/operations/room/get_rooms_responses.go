// Code generated by go-swagger; DO NOT EDIT.

package room

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	models2 "github.com/h4x4d/go_hsse_hotels/hotel/internal/models"
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetRoomsOKCode is the HTTP code returned for type GetRoomsOK
const GetRoomsOKCode int = 200

/*
GetRoomsOK successful operation

swagger:response getRoomsOK
*/
type GetRoomsOK struct {

	/*
	  In: Body
	*/
	Payload []*models2.Room `json:"body,omitempty"`
}

// NewGetRoomsOK creates GetRoomsOK with default headers values
func NewGetRoomsOK() *GetRoomsOK {

	return &GetRoomsOK{}
}

// WithPayload adds the payload to the get rooms o k response
func (o *GetRoomsOK) WithPayload(payload []*models2.Room) *GetRoomsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rooms o k response
func (o *GetRoomsOK) SetPayload(payload []*models2.Room) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRoomsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models2.Room, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetRoomsNotFoundCode is the HTTP code returned for type GetRoomsNotFound
const GetRoomsNotFoundCode int = 404

/*
GetRoomsNotFound Hotel not found

swagger:response getRoomsNotFound
*/
type GetRoomsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models2.Error `json:"body,omitempty"`
}

// NewGetRoomsNotFound creates GetRoomsNotFound with default headers values
func NewGetRoomsNotFound() *GetRoomsNotFound {

	return &GetRoomsNotFound{}
}

// WithPayload adds the payload to the get rooms not found response
func (o *GetRoomsNotFound) WithPayload(payload *models2.Error) *GetRoomsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rooms not found response
func (o *GetRoomsNotFound) SetPayload(payload *models2.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRoomsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
