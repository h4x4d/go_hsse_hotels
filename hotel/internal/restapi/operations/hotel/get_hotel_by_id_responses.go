// Code generated by go-swagger; DO NOT EDIT.

package hotel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	models2 "github.com/h4x4d/go_hsse_hotels/hotel/internal/models"
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetHotelByIDOKCode is the HTTP code returned for type GetHotelByIDOK
const GetHotelByIDOKCode int = 200

/*
GetHotelByIDOK successful operation

swagger:response getHotelByIdOK
*/
type GetHotelByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models2.Hotel `json:"body,omitempty"`
}

// NewGetHotelByIDOK creates GetHotelByIDOK with default headers values
func NewGetHotelByIDOK() *GetHotelByIDOK {

	return &GetHotelByIDOK{}
}

// WithPayload adds the payload to the get hotel by Id o k response
func (o *GetHotelByIDOK) WithPayload(payload *models2.Hotel) *GetHotelByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get hotel by Id o k response
func (o *GetHotelByIDOK) SetPayload(payload *models2.Hotel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHotelByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetHotelByIDNotFoundCode is the HTTP code returned for type GetHotelByIDNotFound
const GetHotelByIDNotFoundCode int = 404

/*
GetHotelByIDNotFound Hotel not found

swagger:response getHotelByIdNotFound
*/
type GetHotelByIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models2.Error `json:"body,omitempty"`
}

// NewGetHotelByIDNotFound creates GetHotelByIDNotFound with default headers values
func NewGetHotelByIDNotFound() *GetHotelByIDNotFound {

	return &GetHotelByIDNotFound{}
}

// WithPayload adds the payload to the get hotel by Id not found response
func (o *GetHotelByIDNotFound) WithPayload(payload *models2.Error) *GetHotelByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get hotel by Id not found response
func (o *GetHotelByIDNotFound) SetPayload(payload *models2.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHotelByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
