// Code generated by go-swagger; DO NOT EDIT.

package hotel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetHotelsHandlerFunc turns a function with the right signature into a get hotels handler
type GetHotelsHandlerFunc func(GetHotelsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetHotelsHandlerFunc) Handle(params GetHotelsParams) middleware.Responder {
	return fn(params)
}

// GetHotelsHandler interface for that can handle valid get hotels params
type GetHotelsHandler interface {
	Handle(GetHotelsParams) middleware.Responder
}

// NewGetHotels creates a new http.Handler for the get hotels operation
func NewGetHotels(ctx *middleware.Context, handler GetHotelsHandler) *GetHotels {
	return &GetHotels{Context: ctx, Handler: handler}
}

/*
	GetHotels swagger:route GET /hotel hotel getHotels

Get suitable hotels
*/
type GetHotels struct {
	Context *middleware.Context
	Handler GetHotelsHandler
}

func (o *GetHotels) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetHotelsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
