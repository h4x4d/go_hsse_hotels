// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "MTS HSSE Go project | Auth svc",
    "title": "hotels.auth",
    "version": "0.1.0"
  },
  "paths": {
    "/change-password": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Change password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "login",
                "oldPassword",
                "newPassword"
              ],
              "properties": {
                "login": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                },
                "oldPassword": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Incorrect old password",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Login user by username and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "login",
                "password"
              ],
              "properties": {
                "login": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect login data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Register user by username and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "login",
                "password",
                "role"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "login": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "customer",
                    "hotelier"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Username is taken",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "error_status_code"
      ],
      "properties": {
        "error_message": {
          "type": "string"
        },
        "error_status_code": {
          "type": "integer"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "MTS HSSE Go project | Auth svc",
    "title": "hotels.auth",
    "version": "0.1.0"
  },
  "paths": {
    "/change-password": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Change password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "login",
                "oldPassword",
                "newPassword"
              ],
              "properties": {
                "login": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                },
                "oldPassword": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Incorrect old password",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Login user by username and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "login",
                "password"
              ],
              "properties": {
                "login": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect login data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Register user by username and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "login",
                "password",
                "role"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "login": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "customer",
                    "hotelier"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success operation",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Username is taken",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "error_status_code"
      ],
      "properties": {
        "error_message": {
          "type": "string"
        },
        "error_status_code": {
          "type": "integer"
        }
      }
    }
  }
}`))
}
